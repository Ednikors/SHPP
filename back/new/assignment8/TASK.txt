Midexam: Chessboard
Треба розмістити на екрані чорні і білі квадрати в шаховому порядку. Розмір квадратів оберіть на ваш смак у діапазоні від 10 до 20 пікселів. 
При русі миші по шахматці всі чорні квадрати, які знаходяться близько до курсору, повинні анімовано змінюватися в розмірі - наприклад, 
їх розмір повинен плавно змінюватися від 10 до 5 і назад від 5 до 10 і так нескінченно.

При кліці на чорний квадрат він повинен переставати анімувати, при ще одному кліці - повинен починати анімувати знову.

Визначити, що таке “квадрат знаходиться близько до курсору”, ми залишаємо на ваш розсуд. Можна брати групу квадратиків NхN навколо курсора, 
можна обчислювати відстань від центру квадрата до курсора і т.д.

Але врахуйте, що ви не заслуговуєте на оцінку > 2, якщо буде анімований лише 1 квадрат під курсором, або якщо буде анімований група квадратів, 
що ніяк не пов’язано з положенням курсора.

Відповіді на питання:
що вийшло, що ні, чому?
В мене все вийшло.

як підійшли до організації своєї роботи?
Абстрагувався від подразників, відклав телефон в сторону, попросив сусідів по кімнаті мене не турбувати. Перед тим добре поспав.

які стратегічні рішення ви прийняли?
Спочатку я зосередився на написані "скелету" програми. Перш за все я реалізував розміщення квадратів в правильному порядку. Далі приступив до розробки правильної анімації.
Після вже добавив обробку взаємодії з мишею і зробив окремий клас для квадратів. В самому кінці приступив до оптимізації та написання коментарів.

слабкі місця коду, сильні місця коду?
Слабких місць в коді не замітив. Сильною стороною свого коду вважаю те, що все регулюється константами та сам код працює швидко.

загальна структура коду 
Весь проект в мене розділений на два класи: ChessBoard та Square. Перший реалізує основну логіку проекту(вивід шахматної дошки на екран, запуск анімацій, обробники подій),
та містить константи, які відповідають за поведінку програми.
Другий же клас відповідає за об'єкти Square, які насправді являються об'єктами GRect з додатковими полями властивостей(isAnimated). Також, в цьому класі була реалізована
сама анімація квадратів.